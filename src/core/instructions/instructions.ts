export type Instruction = 'ğŸ‘†' | 'ğŸ‘‡' | 'ğŸ‘‰' | 'ğŸ‘Š' | 'ğŸ‘ˆ' | 'ğŸ¤œ' | 'ğŸ¤›';
export class Instructions {
	private constructor(private readonly instructions: Instruction[]) {}
	static from(instructions: string): Instructions {
		if (instructions.match(/[^ğŸ‘†ğŸ‘‡ğŸ‘‰ğŸ‘ŠğŸ‘ˆğŸ¤œğŸ¤›]/g)) {
			throw new Error('Invalid instruction');
		}
		if (instructions.length === 0) {
			throw new Error('Instructions must not be empty');
		}
		if (!instructions.includes('ğŸ‘Š')) {
			throw new Error('Instructions must end with ğŸ‘Š');
		}

		return new Instructions([...instructions] as Instruction[]);
	}

	asArray(): Instruction[] {
		return this.instructions;
	}
}
